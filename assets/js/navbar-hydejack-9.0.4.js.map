{"version":3,"sources":["webpack:///./_js/src/navbar.js"],"names":["stylesheetReady","navbarEl","document","getElementById","height","clientHeight","offset","tv","hasCSSOM","CSSTransformValue","CSSTranslate","CSS","px","checkNavbarInactive","activeElement","classList","contains","hashchange$","fromEvent","window","pipe","map","e","URL","newURL","hash","filter","share","notScrollIntoView$","switchMap","debounceTime","mapTo","startWith","jump$","merge","capture","passive","filterWhen","getScrollTop","x","pairwise","prev","curr","mergeWith","tap","Math","max","min","y","value","attributeStyleMap","set","style","transform","subscribe"],"mappings":"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","file":"navbar-hydejack-9.0.4.js","sourcesContent":["// Copyright (c) 2018 Florian Klampfer <https://qwtel.com/>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { fromEvent, timer, merge } from 'rxjs';\nimport {\n  map,\n  filter,\n  pairwise,\n  merge as mergeWith,\n  mapTo,\n  tap,\n  switchMap,\n  startWith,\n  share,\n  debounceTime,\n} from 'rxjs/operators';\n\nimport { hasCSSOM, getScrollTop, stylesheetReady, filterWhen } from './common';\n\n(async () => {\n  await stylesheetReady;\n\n  const navbarEl = document.getElementById('_navbar');\n  if (!navbarEl) return;\n\n  // FIXME: update when size changes\n  const height = navbarEl.clientHeight;\n\n  let offset = 0;\n\n  const tv = hasCSSOM ? new CSSTransformValue([new CSSTranslate(CSS.px(0), CSS.px(0))]) : null;\n\n  const checkNavbarInactive = () => !document.activeElement?.classList.contains('nav-btn');\n\n  const hashchange$ = fromEvent(window, 'hashchange').pipe(\n    map((e) => new URL(e.newURL).hash),\n    filter((hash) => hash !== '' && hash !== '#_search-input'),\n    share(),\n  );\n\n  // To disable the navbar while the \"scroll into view\" animation is active.\n  // Wait for 50ms after scrolling has stopped before unlocking the navbar.\n  const notScrollIntoView$ = hashchange$.pipe(\n    switchMap(() => fromEvent(document, 'scroll').pipe(debounceTime(50), mapTo(true), startWith(false))),\n    startWith(true),\n  );\n\n  // Certain events should make the navbar \"jump\" to a new position.\n  const jump$ = merge(\n    // Focusing any navbar element should show the navbar to enable keyboard-only interaction.\n    fromEvent(navbarEl, 'focus', { capture: true }).pipe(mapTo(2 * height)),\n    // Scrolling to a certain headline should hide the navbar to prevent hiding it.\n    hashchange$.pipe(mapTo(-2 * height)),\n  );\n\n  fromEvent(document, 'scroll', { passive: true })\n    .pipe(\n      filterWhen(notScrollIntoView$),\n      map(getScrollTop),\n      filter((x) => x >= 0),\n      pairwise(),\n      map(([prev, curr]) => prev - curr),\n      filter(checkNavbarInactive),\n      mergeWith(jump$),\n      tap((x) => {\n        offset += x;\n        offset = Math.max(-height, Math.min(0, offset));\n        if (hasCSSOM) {\n          tv[0].y.value = offset;\n          navbarEl.attributeStyleMap.set('transform', tv);\n        } else {\n          navbarEl.style.transform = `translateY(${offset}px)`;\n        }\n      }),\n    )\n    .subscribe();\n})();\n"],"sourceRoot":""}