{"version":3,"sources":["webpack:///./node_modules/intersection-observer/intersection-observer.js"],"names":["window","IntersectionObserverEntry","prototype","Object","defineProperty","get","intersectionRatio","getFrameElement","doc","defaultView","frameElement","e","document","startDoc","frame","ownerDocument","registry","crossOriginUpdater","crossOriginRect","entry","time","target","rootBounds","ensureDOMRect","boundingClientRect","intersectionRect","getEmptyRect","isIntersecting","targetRect","targetArea","width","height","intersectionArea","Number","toFixed","IntersectionObserver","callback","opt_options","options","Error","root","nodeType","_checkForIntersections","throttle","bind","THROTTLE_TIMEOUT","_callback","_observationTargets","_queuedEntries","_rootMarginValues","_parseRootMargin","rootMargin","thresholds","_initThresholds","threshold","map","margin","value","unit","join","_monitoringDocuments","_monitoringUnsubscribes","POLL_INTERVAL","USE_MUTATION_OBSERVER","_setupCrossOriginUpdater","convertFromParentRect","forEach","observer","_resetCrossOriginUpdater","observe","isTargetAlreadyObserved","some","item","element","_registerInstance","push","_monitorIntersections","unobserve","filter","_unmonitorIntersections","length","_unregisterInstance","disconnect","_unmonitorAllIntersections","takeRecords","records","slice","opt_threshold","Array","isArray","sort","t","i","a","isNaN","opt_rootMargin","marginString","margins","split","parts","exec","parseFloat","win","indexOf","monitoringInterval","domObserver","setInterval","addEvent","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","index","rootDoc","hasDependentTargets","itemDoc","unsubscribe","splice","unsubscribes","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","_computeTargetAndRootIntersection","newEntry","now","_hasCrossedThreshold","getComputedStyle","display","parent","getParentNode","atRoot","parentRect","parentComputedStyle","frameRect","frameIntersect","body","documentElement","overflow","computeRectIntersection","html","top","left","right","clientWidth","bottom","clientHeight","_expandRectByRootMargin","rect","newRect","oldRatio","newRatio","containsDeep","performance","fn","timeout","timer","setTimeout","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","rect1","rect2","Math","max","min","el","err","y","x","parentBoundingRect","parentIntersectionRect","child","parentNode","host","assignedSlot"],"mappings":"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","file":"vendors~intersection-observer-hydejack-9.0.4.js","sourcesContent":["/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  if (doc != (this.root && this.root.ownerDocument || document)) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc = (this.root && this.root.ownerDocument || document);\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: crossOriginUpdater && !this.root ? null : rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target) &&\n    (!this.root || this.root.ownerDocument == target.ownerDocument);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  if (parent && parent.assignedSlot) {\n    // If the parent is distributed in a <slot>, return the parent of a slot.\n    return parent.assignedSlot.parentNode;\n  }\n\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n"],"sourceRoot":""}